\n================================================= Fri Apr 12 03:58:23 PM UTC 2024 =========================================================\n
[2024-04-12 11:58:25,423] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 11:58:27,592] [WARNING] [runner.py:202:fetch_hostfile] Unable to find hostfile, will proceed with training with local resources only.
Detected CUDA_VISIBLE_DEVICES=4,5,6,7: setting --include=localhost:4,5,6,7
[2024-04-12 11:58:27,593] [INFO] [runner.py:573:main] cmd = /home/akane38/miniconda3/envs/llava/bin/python -u -m deepspeed.launcher.launch --world_info=eyJsb2NhbGhvc3QiOiBbNCwgNSwgNiwgN119 --master_addr=127.0.0.1 --master_port=29500 --enable_each_rank_log=None llava/train/multi_ve_train_mem.py --deepspeed ./scripts/zero3.json --model_name_or_path lmsys/vicuna-7b-v1.5 --version v1 --data_path /data/data1/akane/LLaVA/data/llava_v1_5_mix665k.json --image_folder /data/data1/akane/LLaVA/data --multiple_vision_towers openai/clip-vit-large-patch14-336 facebook/dinov2-large --resampler_grid_size 24 --use_brave_adapters True --pretrain_mm_mlp_adapter /data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/mm_projector.bin --pretrain_resampler /data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/resampler.bin --scaled_clip_residual True --mm_projector_type mlp2x_gelu --mm_vision_select_layer -2 --mm_use_im_start_end False --mm_use_im_patch_token False --image_aspect_ratio pad --group_by_modality_length True --bf16 True --output_dir /data/data1/akane/mve-clip-dino-brave-finetune-debug/checkpoints/ --num_train_epochs 1 --per_device_train_batch_size 16 --per_device_eval_batch_size 4 --gradient_accumulation_steps 2 --evaluation_strategy no --save_strategy steps --save_steps 50000 --learning_rate 2e-5 --weight_decay 0. --warmup_ratio 0.03 --lr_scheduler_type cosine --logging_steps 1 --tf32 True --model_max_length 2048 --gradient_checkpointing True --dataloader_num_workers 4 --lazy_preprocess True --report_to wandb --run_name mve-clip-dino-scaler-finetune-7b
[2024-04-12 11:58:29,485] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 11:58:32,212] [INFO] [launch.py:145:main] WORLD INFO DICT: {'localhost': [4, 5, 6, 7]}
[2024-04-12 11:58:32,212] [INFO] [launch.py:151:main] nnodes=1, num_local_procs=4, node_rank=0
[2024-04-12 11:58:32,212] [INFO] [launch.py:162:main] global_rank_mapping=defaultdict(<class 'list'>, {'localhost': [0, 1, 2, 3]})
[2024-04-12 11:58:32,212] [INFO] [launch.py:163:main] dist_world_size=4
[2024-04-12 11:58:32,212] [INFO] [launch.py:165:main] Setting CUDA_VISIBLE_DEVICES=4,5,6,7
[2024-04-12 11:58:35,855] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 11:58:36,255] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 11:58:36,284] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 11:58:36,296] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 11:58:36,965] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 11:58:37,518] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 11:58:37,525] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 11:58:37,540] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 11:58:37,540] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[2024-04-12 11:58:50,257] [INFO] [partition_parameters.py:348:__exit__] finished initializing model - num_params = 291, num_elems = 6.74B
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Loading checkpoint shards:  50%|█████     | 1/2 [00:06<00:06,  6.51s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:06<00:06,  6.52s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:06<00:06,  6.52s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.04s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.41s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.08s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.44s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.11s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.47s/it]
Loading checkpoint shards:  50%|█████     | 1/2 [00:09<00:09,  9.95s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:11<00:00,  4.94s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:11<00:00,  5.69s/it]
[2024-04-12 11:59:02,449] [INFO] [partition_parameters.py:348:__exit__] finished initializing model - num_params = 682, num_elems = 7.04B
[2024-04-12 11:59:05,005] [INFO] [partition_parameters.py:348:__exit__] finished initializing model - num_params = 1121, num_elems = 7.35B
Init brave adapters
Init brave adapters
Init brave adapters
Init brave adapters
Resampler param is trainable: True
Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
MultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
trainable=29511681
frozen=0
Resampler param is trainable: True
Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
MultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
trainable=29511681
frozen=0
Resampler param is trainable: True
Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
MultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
trainable=29511681
frozen=0
Resampler param is trainable: True
Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
MultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
trainable=29511681
frozen=0
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
Formatting inputs...Skip in lazy mode
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
Parameter Offload: Total persistent parameters: 985089 in 616 params
wandb: Currently logged in as: compyle. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.16.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.3
wandb: Run data is saved locally in /home/akane38/LLaVA/wandb/run-20240412_115935-5ba6m4zb
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run mve-clip-dino-scaler-finetune-7b
wandb: ⭐️ View project at https://wandb.ai/compyle/multi-ve-llava
wandb: 🚀 View run at https://wandb.ai/compyle/multi-ve-llava/runs/5ba6m4zb
  0%|          | 0/5198 [00:00<?, ?it/s]/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
  0%|          | 1/5198 [00:29<42:28:27, 29.42s/it]                                                   {'loss': 1.5591, 'learning_rate': 1.282051282051282e-07, 'epoch': 0.0}
  0%|          | 1/5198 [00:29<42:28:27, 29.42s/it][2024-04-12 12:00:20,330] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1278976
[2024-04-12 12:00:20,330] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1278977
[2024-04-12 12:00:21,448] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1278978
[2024-04-12 12:00:22,480] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1278979
[2024-04-12 12:00:23,712] [ERROR] [launch.py:321:sigkill_handler] ['/home/akane38/miniconda3/envs/llava/bin/python', '-u', 'llava/train/multi_ve_train_mem.py', '--local_rank=3', '--deepspeed', './scripts/zero3.json', '--model_name_or_path', 'lmsys/vicuna-7b-v1.5', '--version', 'v1', '--data_path', '/data/data1/akane/LLaVA/data/llava_v1_5_mix665k.json', '--image_folder', '/data/data1/akane/LLaVA/data', '--multiple_vision_towers', 'openai/clip-vit-large-patch14-336', 'facebook/dinov2-large', '--resampler_grid_size', '24', '--use_brave_adapters', 'True', '--pretrain_mm_mlp_adapter', '/data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/mm_projector.bin', '--pretrain_resampler', '/data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/resampler.bin', '--scaled_clip_residual', 'True', '--mm_projector_type', 'mlp2x_gelu', '--mm_vision_select_layer', '-2', '--mm_use_im_start_end', 'False', '--mm_use_im_patch_token', 'False', '--image_aspect_ratio', 'pad', '--group_by_modality_length', 'True', '--bf16', 'True', '--output_dir', '/data/data1/akane/mve-clip-dino-brave-finetune-debug/checkpoints/', '--num_train_epochs', '1', '--per_device_train_batch_size', '16', '--per_device_eval_batch_size', '4', '--gradient_accumulation_steps', '2', '--evaluation_strategy', 'no', '--save_strategy', 'steps', '--save_steps', '50000', '--learning_rate', '2e-5', '--weight_decay', '0.', '--warmup_ratio', '0.03', '--lr_scheduler_type', 'cosine', '--logging_steps', '1', '--tf32', 'True', '--model_max_length', '2048', '--gradient_checkpointing', 'True', '--dataloader_num_workers', '4', '--lazy_preprocess', 'True', '--report_to', 'wandb', '--run_name', 'mve-clip-dino-scaler-finetune-7b'] exits with return code = -15
\n================================================= Fri Apr 12 04:00:25 PM UTC 2024 =========================================================\n
[2024-04-12 12:00:27,570] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 12:00:29,634] [WARNING] [runner.py:202:fetch_hostfile] Unable to find hostfile, will proceed with training with local resources only.
Detected CUDA_VISIBLE_DEVICES=4,5,6,7: setting --include=localhost:4,5,6,7
[2024-04-12 12:00:29,634] [INFO] [runner.py:573:main] cmd = /home/akane38/miniconda3/envs/llava/bin/python -u -m deepspeed.launcher.launch --world_info=eyJsb2NhbGhvc3QiOiBbNCwgNSwgNiwgN119 --master_addr=127.0.0.1 --master_port=29500 --enable_each_rank_log=None llava/train/multi_ve_train_mem.py --deepspeed ./scripts/zero3.json --model_name_or_path lmsys/vicuna-7b-v1.5 --version v1 --data_path /data/data1/akane/LLaVA/data/llava_v1_5_mix665k.json --image_folder /data/data1/akane/LLaVA/data --multiple_vision_towers openai/clip-vit-large-patch14-336 facebook/dinov2-large --resampler_grid_size 24 --use_brave_adapters True --pretrain_mm_mlp_adapter /data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/mm_projector.bin --pretrain_resampler /data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/resampler.bin --scaled_clip_residual True --mm_projector_type mlp2x_gelu --mm_vision_select_layer -2 --mm_use_im_start_end False --mm_use_im_patch_token False --image_aspect_ratio pad --group_by_modality_length True --bf16 True --output_dir /data/data1/akane/mve-clip-dino-brave-finetune-debug/checkpoints/ --num_train_epochs 1 --per_device_train_batch_size 16 --per_device_eval_batch_size 4 --gradient_accumulation_steps 2 --evaluation_strategy no --save_strategy steps --save_steps 50000 --learning_rate 2e-5 --weight_decay 0. --warmup_ratio 0.03 --lr_scheduler_type cosine --logging_steps 1 --tf32 True --model_max_length 2048 --gradient_checkpointing True --dataloader_num_workers 4 --lazy_preprocess True --report_to wandb --run_name mve-clip-dino-scaler-finetune-7b
[2024-04-12 12:00:31,493] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 12:00:34,257] [INFO] [launch.py:145:main] WORLD INFO DICT: {'localhost': [4, 5, 6, 7]}
[2024-04-12 12:00:34,257] [INFO] [launch.py:151:main] nnodes=1, num_local_procs=4, node_rank=0
[2024-04-12 12:00:34,257] [INFO] [launch.py:162:main] global_rank_mapping=defaultdict(<class 'list'>, {'localhost': [0, 1, 2, 3]})
[2024-04-12 12:00:34,257] [INFO] [launch.py:163:main] dist_world_size=4
[2024-04-12 12:00:34,257] [INFO] [launch.py:165:main] Setting CUDA_VISIBLE_DEVICES=4,5,6,7
[2024-04-12 12:00:37,968] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 12:00:38,038] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 12:00:38,334] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 12:00:38,341] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-12 12:00:39,075] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 12:00:39,164] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 12:00:39,534] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 12:00:39,573] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-12 12:00:39,573] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llama to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[2024-04-12 12:00:52,202] [INFO] [partition_parameters.py:348:__exit__] finished initializing model - num_params = 291, num_elems = 6.74B
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Loading checkpoint shards:  50%|█████     | 1/2 [00:06<00:06,  6.39s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:06<00:06,  6.40s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:06<00:06,  6.40s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.05s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.40s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.08s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.43s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.08s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:08<00:00,  4.43s/it]
Loading checkpoint shards:  50%|█████     | 1/2 [00:09<00:09,  9.77s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:11<00:00,  4.91s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:11<00:00,  5.64s/it]
[2024-04-12 12:01:03,976] [INFO] [partition_parameters.py:348:__exit__] finished initializing model - num_params = 682, num_elems = 7.04B
[2024-04-12 12:01:06,379] [INFO] [partition_parameters.py:348:__exit__] finished initializing model - num_params = 1121, num_elems = 7.35B
Init brave adapters
Init brave adapters
Init brave adapters
Init brave adapters
Resampler param is trainable: True
Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
MultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
trainable=29511681
frozen=0
Resampler param is trainable: True
Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
Resampler param is trainable: TrueMultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)

Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
trainable=29511681
frozen=0
MultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
Resampler param is trainable: True
Brave adapters param is trainable: True
Projector param is trainable: True
LLM param is trainable: True
VE 0 param is trainable: False
VE 1 param is trainable: False
trainable=29511681
frozen=0
MultiVELlavaLlamaForCausalLM(
  (model): MultiVELlavaLlamaModel(
    (embed_tokens): Embedding(32000, 4096, padding_idx=0)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaFlashAttention2(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
    (multiple_vision_towers): ModuleList(
      (0): CLIPVisionTower(
        (vision_tower): CLIPVisionModel(
          (vision_model): CLIPVisionTransformer(
            (embeddings): CLIPVisionEmbeddings(
              (patch_embedding): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14), bias=False)
              (position_embedding): Embedding(577, 1024)
            )
            (pre_layrnorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (encoder): CLIPEncoder(
              (layers): ModuleList(
                (0-23): 24 x CLIPEncoderLayer(
                  (self_attn): CLIPAttention(
                    (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
                    (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
                  )
                  (layer_norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                  (mlp): CLIPMLP(
                    (activation_fn): QuickGELUActivation()
                    (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                    (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                  )
                  (layer_norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                )
              )
            )
            (post_layernorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): DINOVisionTower(
        (vision_tower): Dinov2Model(
          (embeddings): Dinov2Embeddings(
            (patch_embeddings): Dinov2PatchEmbeddings(
              (projection): Conv2d(3, 1024, kernel_size=(14, 14), stride=(14, 14))
            )
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (encoder): Dinov2Encoder(
            (layer): ModuleList(
              (0-23): 24 x Dinov2Layer(
                (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (attention): Dinov2Attention(
                  (attention): Dinov2SelfAttention(
                    (query): Linear(in_features=1024, out_features=1024, bias=True)
                    (key): Linear(in_features=1024, out_features=1024, bias=True)
                    (value): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                  (output): Dinov2SelfOutput(
                    (dense): Linear(in_features=1024, out_features=1024, bias=True)
                    (dropout): Dropout(p=0.0, inplace=False)
                  )
                )
                (layer_scale1): Dinov2LayerScale()
                (drop_path1): Identity()
                (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
                (mlp): Dinov2MLP(
                  (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                  (activation): GELUActivation()
                  (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                )
                (layer_scale2): Dinov2LayerScale()
                (drop_path2): Identity()
              )
            )
          )
          (layernorm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        )
      )
    )
    (resampler): Resampler(
      (kv_proj): Identity()
      (attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
      )
      (ln_q): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_kv): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
      (ln_post): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
    )
    (mm_projector): Sequential(
      (0): Linear(in_features=1024, out_features=4096, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=4096, out_features=4096, bias=True)
    )
    (brave_adapters): ModuleList(
      (0-1): 2 x Linear(in_features=1024, out_features=1024, bias=True)
    )
  )
  (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
)
trainable=29511681
frozen=0
Formatting inputs...Skip in lazy mode
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
/home/akane38/LLaVA/transformers/src/transformers/deepspeed.py:23: FutureWarning: transformers.deepspeed module is deprecated and will be removed in a future version. Please import deepspeed modules directly from transformers.integrations
  warnings.warn(
Parameter Offload: Total persistent parameters: 985089 in 616 params
wandb: Currently logged in as: compyle. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.16.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.3
wandb: Run data is saved locally in /home/akane38/LLaVA/wandb/run-20240412_120139-2y4tahmm
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run mve-clip-dino-scaler-finetune-7b
wandb: ⭐️ View project at https://wandb.ai/compyle/multi-ve-llava
wandb: 🚀 View run at https://wandb.ai/compyle/multi-ve-llava/runs/2y4tahmm
  0%|          | 0/5198 [00:00<?, ?it/s]/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/akane38/miniconda3/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
Using 0th brave adapterUsing 0th brave adapterUsing 0th brave adapter


Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 1/5198 [00:29<42:18:40, 29.31s/it]                                                   {'loss': 1.6081, 'learning_rate': 1.282051282051282e-07, 'epoch': 0.0}
  0%|          | 1/5198 [00:29<42:18:40, 29.31s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 2/5198 [00:42<28:52:54, 20.01s/it]                                                   {'loss': 1.6316, 'learning_rate': 2.564102564102564e-07, 'epoch': 0.0}
  0%|          | 2/5198 [00:42<28:52:54, 20.01s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 3/5198 [00:55<24:20:33, 16.87s/it]                                                   {'loss': 1.6225, 'learning_rate': 3.846153846153847e-07, 'epoch': 0.0}
  0%|          | 3/5198 [00:55<24:20:33, 16.87s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 4/5198 [01:08<22:05:13, 15.31s/it]                                                   {'loss': 1.6728, 'learning_rate': 5.128205128205128e-07, 'epoch': 0.0}
  0%|          | 4/5198 [01:08<22:05:13, 15.31s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 5/5198 [01:20<20:21:59, 14.12s/it]                                                   {'loss': 1.558, 'learning_rate': 6.41025641025641e-07, 'epoch': 0.0}
  0%|          | 5/5198 [01:20<20:21:59, 14.12s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapterUsing 1th brave adapter

Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 6/5198 [01:34<20:19:47, 14.10s/it]                                                   {'loss': 1.6498, 'learning_rate': 7.692307692307694e-07, 'epoch': 0.0}
  0%|          | 6/5198 [01:34<20:19:47, 14.10s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 7/5198 [01:46<19:11:21, 13.31s/it]                                                   {'loss': 1.6289, 'learning_rate': 8.974358974358975e-07, 'epoch': 0.0}
  0%|          | 7/5198 [01:46<19:11:21, 13.31s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 8/5198 [01:58<18:34:16, 12.88s/it]                                                   {'loss': 1.5998, 'learning_rate': 1.0256410256410257e-06, 'epoch': 0.0}
  0%|          | 8/5198 [01:58<18:34:16, 12.88s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 9/5198 [02:10<18:09:48, 12.60s/it]                                                   {'loss': 1.621, 'learning_rate': 1.153846153846154e-06, 'epoch': 0.0}
  0%|          | 9/5198 [02:10<18:09:48, 12.60s/it]Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 10/5198 [02:22<17:52:43, 12.41s/it]                                                    {'loss': 1.5511, 'learning_rate': 1.282051282051282e-06, 'epoch': 0.0}
  0%|          | 10/5198 [02:22<17:52:43, 12.41s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 11/5198 [02:34<17:50:36, 12.38s/it]                                                    {'loss': 1.6112, 'learning_rate': 1.4102564102564104e-06, 'epoch': 0.0}
  0%|          | 11/5198 [02:34<17:50:36, 12.38s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 12/5198 [02:46<17:24:49, 12.09s/it]                                                    {'loss': 1.5677, 'learning_rate': 1.5384615384615387e-06, 'epoch': 0.0}
  0%|          | 12/5198 [02:46<17:24:49, 12.09s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 13/5198 [02:59<17:52:25, 12.41s/it]                                                    {'loss': 1.4682, 'learning_rate': 1.6666666666666667e-06, 'epoch': 0.0}
  0%|          | 13/5198 [02:59<17:52:25, 12.41s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 14/5198 [03:12<18:12:06, 12.64s/it]                                                    {'loss': 1.3685, 'learning_rate': 1.794871794871795e-06, 'epoch': 0.0}
  0%|          | 14/5198 [03:12<18:12:06, 12.64s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 15/5198 [03:25<18:13:43, 12.66s/it]                                                    {'loss': 1.3842, 'learning_rate': 1.9230769230769234e-06, 'epoch': 0.0}
  0%|          | 15/5198 [03:25<18:13:43, 12.66s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 16/5198 [03:36<17:43:38, 12.32s/it]                                                    {'loss': 1.447, 'learning_rate': 2.0512820512820513e-06, 'epoch': 0.0}
  0%|          | 16/5198 [03:36<17:43:38, 12.32s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 17/5198 [03:50<18:12:29, 12.65s/it]                                                    {'loss': 1.334, 'learning_rate': 2.1794871794871797e-06, 'epoch': 0.0}
  0%|          | 17/5198 [03:50<18:12:29, 12.65s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 18/5198 [04:02<17:49:17, 12.39s/it]                                                    {'loss': 1.2923, 'learning_rate': 2.307692307692308e-06, 'epoch': 0.0}
  0%|          | 18/5198 [04:02<17:49:17, 12.39s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 19/5198 [04:14<18:04:17, 12.56s/it]                                                    {'loss': 1.3577, 'learning_rate': 2.435897435897436e-06, 'epoch': 0.0}
  0%|          | 19/5198 [04:14<18:04:17, 12.56s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 20/5198 [04:28<18:20:32, 12.75s/it]                                                    {'loss': 1.2159, 'learning_rate': 2.564102564102564e-06, 'epoch': 0.0}
  0%|          | 20/5198 [04:28<18:20:32, 12.75s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 21/5198 [04:39<17:44:02, 12.33s/it]                                                    {'loss': 1.299, 'learning_rate': 2.6923076923076923e-06, 'epoch': 0.0}
  0%|          | 21/5198 [04:39<17:44:02, 12.33s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapterUsing 1th brave adapter

Using 1th brave adapter
  0%|          | 22/5198 [04:53<18:23:48, 12.80s/it]                                                    {'loss': 1.261, 'learning_rate': 2.8205128205128207e-06, 'epoch': 0.0}
  0%|          | 22/5198 [04:53<18:23:48, 12.80s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 23/5198 [05:05<17:56:30, 12.48s/it]                                                    {'loss': 1.1992, 'learning_rate': 2.948717948717949e-06, 'epoch': 0.0}
  0%|          | 23/5198 [05:05<17:56:30, 12.48s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 24/5198 [05:17<17:48:26, 12.39s/it]                                                    {'loss': 1.2717, 'learning_rate': 3.0769230769230774e-06, 'epoch': 0.0}
  0%|          | 24/5198 [05:17<17:48:26, 12.39s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  0%|          | 25/5198 [05:30<18:08:14, 12.62s/it]                                                    {'loss': 1.2439, 'learning_rate': 3.205128205128206e-06, 'epoch': 0.0}
  0%|          | 25/5198 [05:30<18:08:14, 12.62s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 26/5198 [05:43<18:28:45, 12.86s/it]                                                    {'loss': 1.1998, 'learning_rate': 3.3333333333333333e-06, 'epoch': 0.01}
  1%|          | 26/5198 [05:43<18:28:45, 12.86s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 27/5198 [05:56<18:22:32, 12.79s/it]                                                    {'loss': 1.2168, 'learning_rate': 3.4615384615384617e-06, 'epoch': 0.01}
  1%|          | 27/5198 [05:56<18:22:32, 12.79s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 28/5198 [06:07<17:43:55, 12.35s/it]                                                    {'loss': 1.2117, 'learning_rate': 3.58974358974359e-06, 'epoch': 0.01}
  1%|          | 28/5198 [06:07<17:43:55, 12.35s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapterUsing 1th brave adapter

  1%|          | 29/5198 [06:23<19:03:30, 13.27s/it]                                                    {'loss': 1.1533, 'learning_rate': 3.7179487179487184e-06, 'epoch': 0.01}
  1%|          | 29/5198 [06:23<19:03:30, 13.27s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 30/5198 [06:35<18:32:46, 12.92s/it]                                                    {'loss': 1.1776, 'learning_rate': 3.846153846153847e-06, 'epoch': 0.01}
  1%|          | 30/5198 [06:35<18:32:46, 12.92s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 31/5198 [06:46<17:54:08, 12.47s/it]                                                    {'loss': 1.2243, 'learning_rate': 3.974358974358974e-06, 'epoch': 0.01}
  1%|          | 31/5198 [06:46<17:54:08, 12.47s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 32/5198 [06:59<17:52:30, 12.46s/it]                                                    {'loss': 1.1441, 'learning_rate': 4.102564102564103e-06, 'epoch': 0.01}
  1%|          | 32/5198 [06:59<17:52:30, 12.46s/it]Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 33/5198 [07:13<18:36:36, 12.97s/it]                                                    {'loss': 1.1455, 'learning_rate': 4.230769230769231e-06, 'epoch': 0.01}
  1%|          | 33/5198 [07:13<18:36:36, 12.97s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 34/5198 [07:25<18:14:57, 12.72s/it]                                                    {'loss': 1.1423, 'learning_rate': 4.358974358974359e-06, 'epoch': 0.01}
  1%|          | 34/5198 [07:25<18:14:57, 12.72s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 35/5198 [07:40<19:04:10, 13.30s/it]                                                    {'loss': 1.098, 'learning_rate': 4.487179487179488e-06, 'epoch': 0.01}
  1%|          | 35/5198 [07:40<19:04:10, 13.30s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 36/5198 [07:52<18:30:29, 12.91s/it]                                                    {'loss': 1.1608, 'learning_rate': 4.615384615384616e-06, 'epoch': 0.01}
  1%|          | 36/5198 [07:52<18:30:29, 12.91s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 37/5198 [08:09<20:35:34, 14.36s/it]                                                    {'loss': 0.3251, 'learning_rate': 4.743589743589744e-06, 'epoch': 0.01}
  1%|          | 37/5198 [08:09<20:35:34, 14.36s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 38/5198 [08:25<21:16:46, 14.85s/it]                                                    {'loss': 1.1424, 'learning_rate': 4.871794871794872e-06, 'epoch': 0.01}
  1%|          | 38/5198 [08:25<21:16:46, 14.85s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 39/5198 [08:37<19:58:04, 13.93s/it]                                                    {'loss': 1.129, 'learning_rate': 5e-06, 'epoch': 0.01}
  1%|          | 39/5198 [08:37<19:58:04, 13.93s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 40/5198 [08:49<19:08:33, 13.36s/it]                                                    {'loss': 1.1285, 'learning_rate': 5.128205128205128e-06, 'epoch': 0.01}
  1%|          | 40/5198 [08:49<19:08:33, 13.36s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 41/5198 [09:01<18:31:59, 12.94s/it]                                                    {'loss': 1.1522, 'learning_rate': 5.256410256410257e-06, 'epoch': 0.01}
  1%|          | 41/5198 [09:01<18:31:59, 12.94s/it]Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 42/5198 [09:13<18:04:22, 12.62s/it]                                                    {'loss': 1.2456, 'learning_rate': 5.384615384615385e-06, 'epoch': 0.01}
  1%|          | 42/5198 [09:13<18:04:22, 12.62s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapterUsing 1th brave adapter

  1%|          | 43/5198 [09:25<17:51:05, 12.47s/it]                                                    {'loss': 1.0953, 'learning_rate': 5.512820512820514e-06, 'epoch': 0.01}
  1%|          | 43/5198 [09:25<17:51:05, 12.47s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 44/5198 [09:38<18:12:06, 12.71s/it]                                                    {'loss': 1.1362, 'learning_rate': 5.641025641025641e-06, 'epoch': 0.01}
  1%|          | 44/5198 [09:38<18:12:06, 12.71s/it]Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 45/5198 [09:51<18:02:10, 12.60s/it]                                                    {'loss': 1.1569, 'learning_rate': 5.769230769230769e-06, 'epoch': 0.01}
  1%|          | 45/5198 [09:51<18:02:10, 12.60s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 46/5198 [10:04<18:19:51, 12.81s/it]                                                    {'loss': 1.1063, 'learning_rate': 5.897435897435898e-06, 'epoch': 0.01}
  1%|          | 46/5198 [10:04<18:19:51, 12.81s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 47/5198 [10:18<18:44:38, 13.10s/it]                                                    {'loss': 1.1022, 'learning_rate': 6.025641025641026e-06, 'epoch': 0.01}
  1%|          | 47/5198 [10:18<18:44:38, 13.10s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 48/5198 [10:30<18:08:49, 12.69s/it]                                                    {'loss': 1.0583, 'learning_rate': 6.153846153846155e-06, 'epoch': 0.01}
  1%|          | 48/5198 [10:30<18:08:49, 12.69s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 49/5198 [10:42<18:03:41, 12.63s/it]                                                    {'loss': 1.0754, 'learning_rate': 6.282051282051282e-06, 'epoch': 0.01}
  1%|          | 49/5198 [10:42<18:03:41, 12.63s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapterUsing 1th brave adapter

Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 50/5198 [10:56<18:33:32, 12.98s/it]                                                    {'loss': 1.0785, 'learning_rate': 6.410256410256412e-06, 'epoch': 0.01}
  1%|          | 50/5198 [10:56<18:33:32, 12.98s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapterUsing 0th brave adapter

Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 51/5198 [11:09<18:24:14, 12.87s/it]                                                    {'loss': 1.1261, 'learning_rate': 6.538461538461539e-06, 'epoch': 0.01}
  1%|          | 51/5198 [11:09<18:24:14, 12.87s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 52/5198 [11:21<18:19:03, 12.81s/it]                                                    {'loss': 1.1005, 'learning_rate': 6.666666666666667e-06, 'epoch': 0.01}
  1%|          | 52/5198 [11:21<18:19:03, 12.81s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
  1%|          | 53/5198 [11:34<18:10:22, 12.72s/it]                                                    {'loss': 1.1119, 'learning_rate': 6.794871794871796e-06, 'epoch': 0.01}
  1%|          | 53/5198 [11:34<18:10:22, 12.72s/it]Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 0th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
Using 1th brave adapter
[2024-04-12 12:13:26,068] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1287022
[2024-04-12 12:13:26,068] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1287023
[2024-04-12 12:13:27,360] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1287024
[2024-04-12 12:13:28,332] [INFO] [launch.py:315:sigkill_handler] Killing subprocess 1287025
[2024-04-12 12:13:29,292] [ERROR] [launch.py:321:sigkill_handler] ['/home/akane38/miniconda3/envs/llava/bin/python', '-u', 'llava/train/multi_ve_train_mem.py', '--local_rank=3', '--deepspeed', './scripts/zero3.json', '--model_name_or_path', 'lmsys/vicuna-7b-v1.5', '--version', 'v1', '--data_path', '/data/data1/akane/LLaVA/data/llava_v1_5_mix665k.json', '--image_folder', '/data/data1/akane/LLaVA/data', '--multiple_vision_towers', 'openai/clip-vit-large-patch14-336', 'facebook/dinov2-large', '--resampler_grid_size', '24', '--use_brave_adapters', 'True', '--pretrain_mm_mlp_adapter', '/data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/mm_projector.bin', '--pretrain_resampler', '/data/data1/akane/mve-clip-dino-brave-pretrain/checkpoints/resampler.bin', '--scaled_clip_residual', 'True', '--mm_projector_type', 'mlp2x_gelu', '--mm_vision_select_layer', '-2', '--mm_use_im_start_end', 'False', '--mm_use_im_patch_token', 'False', '--image_aspect_ratio', 'pad', '--group_by_modality_length', 'True', '--bf16', 'True', '--output_dir', '/data/data1/akane/mve-clip-dino-brave-finetune-debug/checkpoints/', '--num_train_epochs', '1', '--per_device_train_batch_size', '16', '--per_device_eval_batch_size', '4', '--gradient_accumulation_steps', '2', '--evaluation_strategy', 'no', '--save_strategy', 'steps', '--save_steps', '50000', '--learning_rate', '2e-5', '--weight_decay', '0.', '--warmup_ratio', '0.03', '--lr_scheduler_type', 'cosine', '--logging_steps', '1', '--tf32', 'True', '--model_max_length', '2048', '--gradient_checkpointing', 'True', '--dataloader_num_workers', '4', '--lazy_preprocess', 'True', '--report_to', 'wandb', '--run_name', 'mve-clip-dino-scaler-finetune-7b'] exits with return code = -15
